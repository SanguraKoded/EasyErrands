name: CI/CD Pipeline for Errand Service

# Trigger workflow on push or pull request to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest   # GitHub-hosted Ubuntu runner

    # Global environment variables for this job
    env:
      DOCKER_IMAGE: sangurakoded/errand-service  # Your Docker Hub repository
      DOCKER_TAG: ${{ github.sha }}              # Unique tag based on commit SHA

    steps:
      # --------------------------
      # Step 1: Checkout repository
      # --------------------------
      - name: Checkout code
        uses: actions/checkout@v3
        # This clones your GitHub repo to the runner

      # --------------------------
      # Step 2: Set up Java JDK 21
      # --------------------------
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
        # Sets JAVA_HOME automatically and adds Java to PATH

      # --------------------------
      # Step 3: Build project with Maven
      # --------------------------
      - name: Build with Maven
        run: mvn clean package -DskipTests
        # - clean: removes old target/
        # - package: builds jar
        # -DskipTests: skip tests (optional; enable if you want test results later)

      # --------------------------
      # Step 4: Log in to Docker Hub
      # --------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        # Important: DO NOT hardcode username/password. Use GitHub Secrets
        # Secrets are encrypted and safe in CI/CD.

      # --------------------------
      # Step 5: Build Docker image
      # --------------------------
      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
        # Tags image with commit SHA

      # --------------------------
      # Step 6: Push Docker image to Docker Hub
      # --------------------------
      - name: Push Docker image
        run: docker push $DOCKER_IMAGE:$DOCKER_TAG
        # Uploads your image to Docker Hub

      # --------------------------
      # Step 7: Tag 'latest' and push (optional)
      # --------------------------
      - name: Push 'latest' tag
        run: |
          docker tag $DOCKER_IMAGE:$DOCKER_TAG $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:latest
        # Allows pulling "latest" image without specifying SHA

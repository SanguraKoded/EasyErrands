# ============================================================
# ðŸ§© CI/CD WORKFLOW â€” Quick-Errands Microservices
# Builds, tags, and pushes each microservice image to Docker Hub
# ============================================================

name: CI/CD for Quick-Errands Microservices

# ------------------------------------------------------------
# Trigger workflow on any push or pull request to the main branch
# ------------------------------------------------------------
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest   # GitHub-hosted Linux runner

    steps:
      # --------------------------------------------------------
      # Step 1: Checkout the repository source code
      # --------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # --------------------------------------------------------
      # Step 2: Set up JDK 21 for Maven build
      # Required since your Dockerfiles use Eclipse Temurin 21
      # --------------------------------------------------------
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # --------------------------------------------------------
      # Step 3: Authenticate with Docker Hub
      # You must add these secrets under:
      # GitHub Repo â†’ Settings â†’ Secrets â†’ Actions
      #   - DOCKER_HUB_USERNAME
      #   - DOCKER_HUB_ACCESS_TOKEN
      # --------------------------------------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # --------------------------------------------------------
      # Step 4: Build and push Docker images for all microservices
      # Each service folder must contain:
      #   - A valid Dockerfile
      #   - Its own pom.xml (for Maven)
      # The script below loops over all microservices,
      # builds each image, and pushes to Docker Hub
      # --------------------------------------------------------
      - name: Build and push Docker images for microservices
        run: |
          # List of all your microservices
          services=("auth-service" "api-gateway" "config-server" "discovery-service" "errand-service" "tracking-service" "assignment-service")

          # Iterate over each service folder
          for service in "${services[@]}"; do
            echo "ðŸš€ Building image for $service ..."
          
            # Build Docker image from that serviceâ€™s Dockerfile
            # - The context (.) includes the whole repo so shared modules like `common-events` are available
            docker build -t sangurakoded/$service:latest -f $service/Dockerfile .

            # Tag image also with commit SHA for version tracking
            docker tag sangurakoded/$service:latest sangurakoded/$service:${{ github.sha }}

            # Push both tags to Docker Hub
            echo "ðŸ“¦ Pushing $service to Docker Hub..."
            docker push sangurakoded/$service:latest
            docker push sangurakoded/$service:${{ github.sha }}

            echo "âœ… Done building and pushing $service"
            echo "----------------------------------------------------"
          done

      # --------------------------------------------------------
      # Step 5: (Optional) â€” Clean up Docker images to free space
      # GitHub runners have limited disk, so this is good hygiene
      # --------------------------------------------------------
      - name: Clean up Docker images
        if: always()
        run: docker system prune -af
